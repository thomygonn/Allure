{"name": "test_crear_empleado", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(.,\"Legajo creado correctamente\")]\"}\n  (Session info: chrome=107.0.5304.88)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x011DACD3+2075859]\n\tOrdinal0 [0x0116EE61+1633889]\n\tOrdinal0 [0x0106B7BD+571325]\n\tOrdinal0 [0x0109AC2F+764975]\n\tOrdinal0 [0x0109AE1B+765467]\n\tOrdinal0 [0x010CD0F2+970994]\n\tOrdinal0 [0x010B7364+881508]\n\tOrdinal0 [0x010CB56A+963946]\n\tOrdinal0 [0x010B7136+880950]\n\tOrdinal0 [0x0108FEFD+720637]\n\tOrdinal0 [0x01090F3F+724799]\n\tGetHandleVerifier [0x0148EED2+2769538]\n\tGetHandleVerifier [0x01480D95+2711877]\n\tGetHandleVerifier [0x0126A03A+521194]\n\tGetHandleVerifier [0x01268DA0+516432]\n\tOrdinal0 [0x0117682C+1665068]\n\tOrdinal0 [0x0117B128+1683752]\n\tOrdinal0 [0x0117B215+1683989]\n\tOrdinal0 [0x01186484+1729668]\n\tBaseThreadInitThunk [0x74FEFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x76FD7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x76FD7B8E+238]", "trace": "self = <src.StepDefinitions.humanage_QA.CrearEmpleados.test_EmpleadoExitoso.CrearEmpleado testMethod=test_crear_empleado>\n\n    def test_crear_empleado(self):\n        self.creandoEmpleado.getBtnCrearEmpleado()\n        self.creandoEmpleado.setIdFiscal('20-41544615-3')\n        self.creandoEmpleado.setNombreEmpleado('Florencia')\n        self.creandoEmpleado.setApellido('Rodriguez')\n        self.creandoEmpleado.setMail('florenciamend@yopmail.com')\n        self.creandoEmpleado.setLegajo('5012')\n        self.creandoEmpleado.setTelefono('+541126154895')\n        self.creandoEmpleado.getBtnEnviarEmpleado()\n>       self.assertTrue(self.creandoEmpleado.get_textoValid().text, 'Legajo creado correctamente')\n\nsrc\\StepDefinitions\\humanage_QA\\CrearEmpleados\\test_EmpleadoExitoso.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\Task\\Humanage_QA\\task_crear_empleado.py:34: in get_textoValid\n    return self.driver.find_element(By.XPATH, self.legajo_creado_correcto)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:857: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:435: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000243A09B2BC0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FD7BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FD7B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(.,\"Legajo creado correctamente\")]\"}\nE         (Session info: chrome=107.0.5304.88)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x011DACD3+2075859]\nE       \tOrdinal0 [0x0116EE61+1633889]\nE       \tOrdinal0 [0x0106B7BD+571325]\nE       \tOrdinal0 [0x0109AC2F+764975]\nE       \tOrdinal0 [0x0109AE1B+765467]\nE       \tOrdinal0 [0x010CD0F2+970994]\nE       \tOrdinal0 [0x010B7364+881508]\nE       \tOrdinal0 [0x010CB56A+963946]\nE       \tOrdinal0 [0x010B7136+880950]\nE       \tOrdinal0 [0x0108FEFD+720637]\nE       \tOrdinal0 [0x01090F3F+724799]\nE       \tGetHandleVerifier [0x0148EED2+2769538]\nE       \tGetHandleVerifier [0x01480D95+2711877]\nE       \tGetHandleVerifier [0x0126A03A+521194]\nE       \tGetHandleVerifier [0x01268DA0+516432]\nE       \tOrdinal0 [0x0117682C+1665068]\nE       \tOrdinal0 [0x0117B128+1683752]\nE       \tOrdinal0 [0x0117B215+1683989]\nE       \tOrdinal0 [0x01186484+1729668]\nE       \tBaseThreadInitThunk [0x74FEFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FD7BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FD7B8E+238]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "start": 1667617791860, "stop": 1667617860245, "uuid": "3377b24f-d856-4e16-b2bb-4740cff32961", "historyId": "621e108432822ced0bbb04307daa5245", "testCaseId": "994549af3e6d9f2ef3a5b06245ce2fc5", "fullName": "src.StepDefinitions.humanage_QA.CrearEmpleados.test_EmpleadoExitoso.CrearEmpleado#test_crear_empleado", "labels": [{"name": "parentSuite", "value": "src.StepDefinitions.humanage_QA.CrearEmpleados"}, {"name": "suite", "value": "test_EmpleadoExitoso"}, {"name": "subSuite", "value": "CrearEmpleado"}, {"name": "host", "value": "N-396"}, {"name": "thread", "value": "9384-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.StepDefinitions.humanage_QA.CrearEmpleados.test_EmpleadoExitoso"}]}